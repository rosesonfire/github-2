'use strict';

var _setup = require('./../setup');

var _setup2 = _interopRequireDefault(_setup);

var _xmlToJsonConverter = require('./../../main/services/xmlToJsonConverter');

var _xmlToJsonConverter2 = _interopRequireDefault(_xmlToJsonConverter);

var _plainOldMockObject = require('./../mocks/others/plainOldMockObject');

var _plainOldMockObject2 = _interopRequireDefault(_plainOldMockObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// eslint-disable-next-line no-undef

// unit
describe('XmlToJsonConverter', function () {
  var mocks = void 0,
      converter = void 0,
      asyncConverter = void 0,
      xml = void 0,
      jsonData = void 0;

  // eslint-disable-next-line no-undef
  before(function () {
    xml =
    /* eslint-disable */
    '<?xml version="1.0" encoding="UTF-8"?>\n<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xml:lang="en-US">\n  <id>tag:github.com,2008:/timeline</id>\n  <link type="text/html" rel="alternate" href="https://github.com/timeline" />\n  <link type="application/atom+xml" rel="self" href="https://github.com/timeline" />\n  <title>GitHub Public Timeline Feed</title>\n  <updated>2018-03-01T23:58:35Z</updated>\n  <entry>\n    <id>tag:github.com,2008:IssueCommentEvent/7319278825</id>\n    <published>2018-03-01T23:58:35Z</published>\n    <updated>2018-03-01T23:58:35Z</updated>\n    <link type="text/html" rel="alternate" href="https://github.com/ansible/ansible/pull/36931#issuecomment-369773515" />\n    <title type="html">ansibot commented on pull request ansible/ansible#36931</title>\n    <author>\n      <name>ansibot</name>\n      <email />\n      <uri>https://github.com/ansibot</uri>\n    </author>\n    <media:thumbnail height="30" width="30" url="https://avatars3.githubusercontent.com/u/6585283?s=30&amp;v=4" />\n    <content type="html">&lt;!-- issue_comment --&gt;\n&lt;div class="d-flex border-bottom border-gray-light py-3"&gt;\n  \n&lt;span class="position-relative mr-3"&gt;\n  &lt;a href="/ansibot" rel="noreferrer"&gt;&lt;img alt="@ansibot" class="avatar" height="32" src="https://avatars0.githubusercontent.com/u/6585283?s=64&amp;amp;v=4" width="32"&gt;&lt;/a&gt;\n&lt;/span&gt;\n\n  &lt;div class="d-flex flex-column width-full"&gt;\n    &lt;div&gt;\n      &lt;div class="d-flex flex-justify-between flex-items-baseline"&gt;\n        &lt;div&gt;\n          &lt;a href="/ansibot" class="link-gray-dark text-bold wb-break-all" data-ga-click="News feed, event click, Event click type:IssueCommentEvent target:actor" data-hydro-click-hmac="0b4c656b7b6559ca7cc93b318e042cf312ca3b7b2bc151806fb59a52ce1ff73d" data-hydro-click="{&amp;quot;event_type&amp;quot;:&amp;quot;news_feed.event.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;action_target&amp;quot;:&amp;quot;actor&amp;quot;,&amp;quot;event&amp;quot;:{&amp;quot;repo_id&amp;quot;:3638964,&amp;quot;actor_id&amp;quot;:6585283,&amp;quot;public&amp;quot;:true,&amp;quot;type&amp;quot;:&amp;quot;IssueCommentEvent&amp;quot;,&amp;quot;target_id&amp;quot;:null,&amp;quot;id&amp;quot;:7319278825,&amp;quot;additional_details_shown&amp;quot;:false},&amp;quot;org_id&amp;quot;:null,&amp;quot;originating_request_id&amp;quot;:&amp;quot;D108:869F:2AD6D14:3E2C216:5A9893AA&amp;quot;}}" rel="noreferrer"&gt;ansibot&lt;/a&gt; commented on pull request &lt;a href="/ansible/ansible/pull/36931#issuecomment-369773515" class="link-gray-dark text-bold" data-ga-click="News feed, event click, Event click type:IssueCommentEvent target:issue-comment" data-hydro-click-hmac="b86b9b2886e58465af52445692e372f5075f8190e9eec90cb8f8d60253b315a5" data-hydro-click="{&amp;quot;event_type&amp;quot;:&amp;quot;news_feed.event.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;action_target&amp;quot;:&amp;quot;issue-comment&amp;quot;,&amp;quot;event&amp;quot;:{&amp;quot;repo_id&amp;quot;:3638964,&amp;quot;actor_id&amp;quot;:6585283,&amp;quot;public&amp;quot;:true,&amp;quot;type&amp;quot;:&amp;quot;IssueCommentEvent&amp;quot;,&amp;quot;target_id&amp;quot;:null,&amp;quot;id&amp;quot;:7319278825,&amp;quot;additional_details_shown&amp;quot;:false},&amp;quot;org_id&amp;quot;:null,&amp;quot;originating_request_id&amp;quot;:&amp;quot;D108:869F:2AD6D14:3E2C216:5A9893AA&amp;quot;}}" title="postgresql_user: set encrypted as default and fix empty password reporting changed" rel="noreferrer"&gt;ansible/ansible#36931&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;span class="f6 text-gray-light ml-4"&gt;\n          &lt;relative-time datetime="2018-03-01T23:58:35Z"&gt;Mar 2, 2018&lt;/relative-time&gt;\n        &lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class="message markdown-body mt-3"&gt;\n      &lt;blockquote&gt;\n        &lt;p&gt;cc &lt;a href="https://github.com/matburt" class="user-mention" rel="noreferrer"&gt;@matburt&lt;/a&gt; &lt;a href="https://github.com/nerzhul" class="user-mention" rel="noreferrer"&gt;@nerzhul&lt;/a&gt;\n&lt;a href="https://github.com/ansible/ansibullbot/blob/master/ISSUE_HELP.md" rel="noreferrer"&gt;click here for bot help&lt;/a&gt;\n&lt;/p&gt;\n      &lt;/blockquote&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;</content>\n  </entry>\n</feed>';
    /* eslint-enable */
    jsonData = {};
  });

  // eslint-disable-next-line no-undef
  afterEach(function () {
    return mocks.forEach(function (mock) {
      return mock.verify();
    });
  });

  // eslint-disable-next-line no-undef
  describe('When converting data with sync converter', function () {
    // eslint-disable-next-line no-undef
    beforeEach(function () {
      converter = (0, _plainOldMockObject2.default)();
      mocks = [converter];
      converter.once().withExactArgs({ xml: xml }).returns(jsonData);
    });

    // eslint-disable-next-line no-undef
    it('should return a promise', function () {
      return (0, _xmlToJsonConverter2.default)({ converter: converter })({ xml: xml }).should.be.a('promise');
    });

    // eslint-disable-next-line no-undef
    it('should get converted data', function () {
      return (0, _xmlToJsonConverter2.default)({ converter: converter })({ xml: xml }).should.eventually.equal(jsonData);
    });
  });

  // eslint-disable-next-line no-undef
  describe('When converting data with async converter', function () {
    // eslint-disable-next-line no-undef
    beforeEach(function () {
      asyncConverter = (0, _plainOldMockObject2.default)();
      mocks = [asyncConverter];
      asyncConverter.once().withExactArgs({ xml: xml }).returns(Promise.resolve(jsonData));
    });

    // eslint-disable-next-line no-undef
    it('should get converted data', function () {
      return (0, _xmlToJsonConverter2.default)({ converter: asyncConverter })({ xml: xml }).should.eventually.equal(jsonData);
    });
  });
});
// mocks
// eslint-disable-next-line no-unused-vars
//# sourceMappingURL=data:application/json;charset=utf-8;base64,