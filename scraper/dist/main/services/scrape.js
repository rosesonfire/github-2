'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Extracts only the required data
var extract = function extract(_ref, baseUrl) {
  var feed = _ref.feed;

  var requiredData = feed.entry.map(function (en) {
    var author = en.author[0];
    return {
      updateTime: new Date(Date.parse(en.updated[0])),
      event: en.id[0].split(':')[2].split('/')[0],
      author: {
        name: author.name[0],
        uri: author.uri[0].replace(baseUrl, '')
      }
    };
  });
  return requiredData;
};

// ETL's required data from endpoint to persistence

exports.default = function (_ref2) {
  var url = _ref2.url,
      getBaseUrl = _ref2.getBaseUrl,
      fetchData = _ref2.fetchData,
      convertXMLToJSON = _ref2.convertXMLToJSON,
      odm = _ref2.odm;
  return async function () {
    var baseUrl = await getBaseUrl({ url: url });

    var _ref3 = await fetchData({ url: url }),
        data = _ref3.data;

    var jsonData = await convertXMLToJSON({ xml: data });
    var requiredData = extract(jsonData, baseUrl);

    return Promise.all(requiredData.map(function (reqData) {
      return odm.create({ key: reqData.author.uri, data: reqData }).save();
    }));
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL3NlcnZpY2VzL3NjcmFwZS5qcyJdLCJuYW1lcyI6WyJleHRyYWN0IiwiYmFzZVVybCIsImZlZWQiLCJyZXF1aXJlZERhdGEiLCJlbnRyeSIsIm1hcCIsImF1dGhvciIsImVuIiwidXBkYXRlVGltZSIsIkRhdGUiLCJwYXJzZSIsInVwZGF0ZWQiLCJldmVudCIsImlkIiwic3BsaXQiLCJuYW1lIiwidXJpIiwicmVwbGFjZSIsInVybCIsImdldEJhc2VVcmwiLCJmZXRjaERhdGEiLCJjb252ZXJ0WE1MVG9KU09OIiwib2RtIiwiZGF0YSIsImpzb25EYXRhIiwieG1sIiwiUHJvbWlzZSIsImFsbCIsImNyZWF0ZSIsImtleSIsInJlcURhdGEiLCJzYXZlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsSUFBTUEsVUFBVSxTQUFWQSxPQUFVLE9BQVdDLE9BQVgsRUFBdUI7QUFBQSxNQUFwQkMsSUFBb0IsUUFBcEJBLElBQW9COztBQUNyQyxNQUFNQyxlQUFlRCxLQUFLRSxLQUFMLENBQVdDLEdBQVgsQ0FBZSxjQUFNO0FBQ3hDLFFBQU1DLFNBQVNDLEdBQUdELE1BQUgsQ0FBVSxDQUFWLENBQWY7QUFDQSxXQUFPO0FBQ0xFLGtCQUFZLElBQUlDLElBQUosQ0FBU0EsS0FBS0MsS0FBTCxDQUFXSCxHQUFHSSxPQUFILENBQVcsQ0FBWCxDQUFYLENBQVQsQ0FEUDtBQUVMQyxhQUFPTCxHQUFHTSxFQUFILENBQU0sQ0FBTixFQUFTQyxLQUFULENBQWUsR0FBZixFQUFvQixDQUFwQixFQUF1QkEsS0FBdkIsQ0FBNkIsR0FBN0IsRUFBa0MsQ0FBbEMsQ0FGRjtBQUdMUixjQUFRO0FBQ05TLGNBQU1ULE9BQU9TLElBQVAsQ0FBWSxDQUFaLENBREE7QUFFTkMsYUFBS1YsT0FBT1UsR0FBUCxDQUFXLENBQVgsRUFBY0MsT0FBZCxDQUFzQmhCLE9BQXRCLEVBQStCLEVBQS9CO0FBRkM7QUFISCxLQUFQO0FBUUQsR0FWb0IsQ0FBckI7QUFXQSxTQUFPRSxZQUFQO0FBQ0QsQ0FiRDs7QUFlQTs7a0JBQ2U7QUFBQSxNQUFHZSxHQUFILFNBQUdBLEdBQUg7QUFBQSxNQUFRQyxVQUFSLFNBQVFBLFVBQVI7QUFBQSxNQUFvQkMsU0FBcEIsU0FBb0JBLFNBQXBCO0FBQUEsTUFBK0JDLGdCQUEvQixTQUErQkEsZ0JBQS9CO0FBQUEsTUFBaURDLEdBQWpELFNBQWlEQSxHQUFqRDtBQUFBLFNBQ2Isa0JBQVk7QUFDVixRQUFNckIsVUFBVSxNQUFNa0IsV0FBVyxFQUFFRCxRQUFGLEVBQVgsQ0FBdEI7O0FBRFUsZ0JBRU8sTUFBTUUsVUFBVSxFQUFFRixRQUFGLEVBQVYsQ0FGYjtBQUFBLFFBRUZLLElBRkUsU0FFRkEsSUFGRTs7QUFHVixRQUFNQyxXQUFXLE1BQU1ILGlCQUFpQixFQUFFSSxLQUFLRixJQUFQLEVBQWpCLENBQXZCO0FBQ0EsUUFBTXBCLGVBQWVILFFBQVF3QixRQUFSLEVBQWtCdkIsT0FBbEIsQ0FBckI7O0FBRUEsV0FBT3lCLFFBQVFDLEdBQVIsQ0FBWXhCLGFBQWFFLEdBQWIsQ0FBaUI7QUFBQSxhQUNsQ2lCLElBQUlNLE1BQUosQ0FBVyxFQUFFQyxLQUFLQyxRQUFReEIsTUFBUixDQUFlVSxHQUF0QixFQUEyQk8sTUFBTU8sT0FBakMsRUFBWCxFQUF1REMsSUFBdkQsRUFEa0M7QUFBQSxLQUFqQixDQUFaLENBQVA7QUFFRCxHQVRZO0FBQUEsQyIsImZpbGUiOiJzY3JhcGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHRyYWN0cyBvbmx5IHRoZSByZXF1aXJlZCBkYXRhXG5jb25zdCBleHRyYWN0ID0gKHsgZmVlZCB9LCBiYXNlVXJsKSA9PiB7XG4gIGNvbnN0IHJlcXVpcmVkRGF0YSA9IGZlZWQuZW50cnkubWFwKGVuID0+IHtcbiAgICBjb25zdCBhdXRob3IgPSBlbi5hdXRob3JbMF1cbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlVGltZTogbmV3IERhdGUoRGF0ZS5wYXJzZShlbi51cGRhdGVkWzBdKSksXG4gICAgICBldmVudDogZW4uaWRbMF0uc3BsaXQoJzonKVsyXS5zcGxpdCgnLycpWzBdLFxuICAgICAgYXV0aG9yOiB7XG4gICAgICAgIG5hbWU6IGF1dGhvci5uYW1lWzBdLFxuICAgICAgICB1cmk6IGF1dGhvci51cmlbMF0ucmVwbGFjZShiYXNlVXJsLCAnJylcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIHJldHVybiByZXF1aXJlZERhdGFcbn1cblxuLy8gRVRMJ3MgcmVxdWlyZWQgZGF0YSBmcm9tIGVuZHBvaW50IHRvIHBlcnNpc3RlbmNlXG5leHBvcnQgZGVmYXVsdCAoeyB1cmwsIGdldEJhc2VVcmwsIGZldGNoRGF0YSwgY29udmVydFhNTFRvSlNPTiwgb2RtIH0pID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBiYXNlVXJsID0gYXdhaXQgZ2V0QmFzZVVybCh7IHVybCB9KVxuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZmV0Y2hEYXRhKHsgdXJsIH0pXG4gICAgY29uc3QganNvbkRhdGEgPSBhd2FpdCBjb252ZXJ0WE1MVG9KU09OKHsgeG1sOiBkYXRhIH0pXG4gICAgY29uc3QgcmVxdWlyZWREYXRhID0gZXh0cmFjdChqc29uRGF0YSwgYmFzZVVybClcblxuICAgIHJldHVybiBQcm9taXNlLmFsbChyZXF1aXJlZERhdGEubWFwKHJlcURhdGEgPT5cbiAgICAgIG9kbS5jcmVhdGUoeyBrZXk6IHJlcURhdGEuYXV0aG9yLnVyaSwgZGF0YTogcmVxRGF0YSB9KS5zYXZlKCkpKVxuICB9XG4iXX0=