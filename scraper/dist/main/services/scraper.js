'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Extracts only the required data
var extract = function extract(_ref, baseUrl) {
  var feed = _ref.feed;

  var requiredData = feed.entry.map(function (en) {
    var author = en.author[0];
    return {
      updateTime: new Date(Date.parse(en.updated[0])),
      event: en.id[0].split(':')[2].split('/')[0],
      author: {
        name: author.name[0],
        uri: author.uri[0].replace(baseUrl, '')
      }
    };
  });
  return requiredData;
};

// ETL's required data from endpoint to persistence

exports.default = function (_ref2) {
  var url = _ref2.url,
      getBaseUrl = _ref2.getBaseUrl,
      fetchData = _ref2.fetchData,
      convertXMLToJSON = _ref2.convertXMLToJSON,
      odm = _ref2.odm;
  return async function () {
    var baseUrl = await getBaseUrl({ url: url });

    var _ref3 = await fetchData({ url: url }),
        data = _ref3.data;

    var jsonData = await convertXMLToJSON({ xml: data });
    var requiredData = extract(jsonData, baseUrl);

    return Promise.all(requiredData.map(function (reqData) {
      return odm.create({ key: reqData.author.uri, data: reqData }).save();
    }));
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL3NlcnZpY2VzL3NjcmFwZXIuanMiXSwibmFtZXMiOlsiZXh0cmFjdCIsImJhc2VVcmwiLCJmZWVkIiwicmVxdWlyZWREYXRhIiwiZW50cnkiLCJtYXAiLCJhdXRob3IiLCJlbiIsInVwZGF0ZVRpbWUiLCJEYXRlIiwicGFyc2UiLCJ1cGRhdGVkIiwiZXZlbnQiLCJpZCIsInNwbGl0IiwibmFtZSIsInVyaSIsInJlcGxhY2UiLCJ1cmwiLCJnZXRCYXNlVXJsIiwiZmV0Y2hEYXRhIiwiY29udmVydFhNTFRvSlNPTiIsIm9kbSIsImRhdGEiLCJqc29uRGF0YSIsInhtbCIsIlByb21pc2UiLCJhbGwiLCJjcmVhdGUiLCJrZXkiLCJyZXFEYXRhIiwic2F2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLElBQU1BLFVBQVUsU0FBVkEsT0FBVSxPQUFXQyxPQUFYLEVBQXVCO0FBQUEsTUFBcEJDLElBQW9CLFFBQXBCQSxJQUFvQjs7QUFDckMsTUFBTUMsZUFBZUQsS0FBS0UsS0FBTCxDQUFXQyxHQUFYLENBQWUsY0FBTTtBQUN4QyxRQUFNQyxTQUFTQyxHQUFHRCxNQUFILENBQVUsQ0FBVixDQUFmO0FBQ0EsV0FBTztBQUNMRSxrQkFBWSxJQUFJQyxJQUFKLENBQVNBLEtBQUtDLEtBQUwsQ0FBV0gsR0FBR0ksT0FBSCxDQUFXLENBQVgsQ0FBWCxDQUFULENBRFA7QUFFTEMsYUFBT0wsR0FBR00sRUFBSCxDQUFNLENBQU4sRUFBU0MsS0FBVCxDQUFlLEdBQWYsRUFBb0IsQ0FBcEIsRUFBdUJBLEtBQXZCLENBQTZCLEdBQTdCLEVBQWtDLENBQWxDLENBRkY7QUFHTFIsY0FBUTtBQUNOUyxjQUFNVCxPQUFPUyxJQUFQLENBQVksQ0FBWixDQURBO0FBRU5DLGFBQUtWLE9BQU9VLEdBQVAsQ0FBVyxDQUFYLEVBQWNDLE9BQWQsQ0FBc0JoQixPQUF0QixFQUErQixFQUEvQjtBQUZDO0FBSEgsS0FBUDtBQVFELEdBVm9CLENBQXJCO0FBV0EsU0FBT0UsWUFBUDtBQUNELENBYkQ7O0FBZUE7O2tCQUNlO0FBQUEsTUFBR2UsR0FBSCxTQUFHQSxHQUFIO0FBQUEsTUFBUUMsVUFBUixTQUFRQSxVQUFSO0FBQUEsTUFBb0JDLFNBQXBCLFNBQW9CQSxTQUFwQjtBQUFBLE1BQStCQyxnQkFBL0IsU0FBK0JBLGdCQUEvQjtBQUFBLE1BQWlEQyxHQUFqRCxTQUFpREEsR0FBakQ7QUFBQSxTQUNiLGtCQUFZO0FBQ1YsUUFBTXJCLFVBQVUsTUFBTWtCLFdBQVcsRUFBRUQsUUFBRixFQUFYLENBQXRCOztBQURVLGdCQUVPLE1BQU1FLFVBQVUsRUFBRUYsUUFBRixFQUFWLENBRmI7QUFBQSxRQUVGSyxJQUZFLFNBRUZBLElBRkU7O0FBR1YsUUFBTUMsV0FBVyxNQUFNSCxpQkFBaUIsRUFBRUksS0FBS0YsSUFBUCxFQUFqQixDQUF2QjtBQUNBLFFBQU1wQixlQUFlSCxRQUFRd0IsUUFBUixFQUFrQnZCLE9BQWxCLENBQXJCOztBQUVBLFdBQU95QixRQUFRQyxHQUFSLENBQVl4QixhQUFhRSxHQUFiLENBQWlCO0FBQUEsYUFDbENpQixJQUFJTSxNQUFKLENBQVcsRUFBRUMsS0FBS0MsUUFBUXhCLE1BQVIsQ0FBZVUsR0FBdEIsRUFBMkJPLE1BQU1PLE9BQWpDLEVBQVgsRUFBdURDLElBQXZELEVBRGtDO0FBQUEsS0FBakIsQ0FBWixDQUFQO0FBRUQsR0FUWTtBQUFBLEMiLCJmaWxlIjoic2NyYXBlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEV4dHJhY3RzIG9ubHkgdGhlIHJlcXVpcmVkIGRhdGFcbmNvbnN0IGV4dHJhY3QgPSAoeyBmZWVkIH0sIGJhc2VVcmwpID0+IHtcbiAgY29uc3QgcmVxdWlyZWREYXRhID0gZmVlZC5lbnRyeS5tYXAoZW4gPT4ge1xuICAgIGNvbnN0IGF1dGhvciA9IGVuLmF1dGhvclswXVxuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGVUaW1lOiBuZXcgRGF0ZShEYXRlLnBhcnNlKGVuLnVwZGF0ZWRbMF0pKSxcbiAgICAgIGV2ZW50OiBlbi5pZFswXS5zcGxpdCgnOicpWzJdLnNwbGl0KCcvJylbMF0sXG4gICAgICBhdXRob3I6IHtcbiAgICAgICAgbmFtZTogYXV0aG9yLm5hbWVbMF0sXG4gICAgICAgIHVyaTogYXV0aG9yLnVyaVswXS5yZXBsYWNlKGJhc2VVcmwsICcnKVxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgcmV0dXJuIHJlcXVpcmVkRGF0YVxufVxuXG4vLyBFVEwncyByZXF1aXJlZCBkYXRhIGZyb20gZW5kcG9pbnQgdG8gcGVyc2lzdGVuY2VcbmV4cG9ydCBkZWZhdWx0ICh7IHVybCwgZ2V0QmFzZVVybCwgZmV0Y2hEYXRhLCBjb252ZXJ0WE1MVG9KU09OLCBvZG0gfSkgPT5cbiAgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGJhc2VVcmwgPSBhd2FpdCBnZXRCYXNlVXJsKHsgdXJsIH0pXG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBmZXRjaERhdGEoeyB1cmwgfSlcbiAgICBjb25zdCBqc29uRGF0YSA9IGF3YWl0IGNvbnZlcnRYTUxUb0pTT04oeyB4bWw6IGRhdGEgfSlcbiAgICBjb25zdCByZXF1aXJlZERhdGEgPSBleHRyYWN0KGpzb25EYXRhLCBiYXNlVXJsKVxuXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHJlcXVpcmVkRGF0YS5tYXAocmVxRGF0YSA9PlxuICAgICAgb2RtLmNyZWF0ZSh7IGtleTogcmVxRGF0YS5hdXRob3IudXJpLCBkYXRhOiByZXFEYXRhIH0pLnNhdmUoKSkpXG4gIH1cbiJdfQ==