'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
// Extracts only the required data
var extract = function extract(_ref, baseUrl) {
  var feed = _ref.feed;

  var requiredData = feed.entry.map(function (en) {
    var author = en.author[0];
    return {
      updateTime: new Date(Date.parse(en.updated[0])),
      event: en.id[0].split(':')[2].split('/')[0],
      author: {
        name: author.name[0],
        uri: author.uri[0].replace(baseUrl, '')
      }
    };
  });
  return requiredData;
};

// ETL's required data from endpoint to persistence

exports.default = function (_ref2) {
  var url = _ref2.url,
      baseUrlGetter = _ref2.baseUrlGetter,
      dataFetcher = _ref2.dataFetcher,
      xmlToJsonConverter = _ref2.xmlToJsonConverter,
      odm = _ref2.odm;
  return async function () {
    var baseUrl = await baseUrlGetter({ url: url });

    var _ref3 = await dataFetcher({ url: url }),
        data = _ref3.data;

    var jsonData = await xmlToJsonConverter({ xml: data });
    var requiredData = extract(jsonData, baseUrl);

    return Promise.all(requiredData.map(function (reqData) {
      return odm.create({ key: reqData.author.uri, data: reqData }).save();
    }));
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYWluL2xpYi9zY3JhcGVyLmpzIl0sIm5hbWVzIjpbImV4dHJhY3QiLCJiYXNlVXJsIiwiZmVlZCIsInJlcXVpcmVkRGF0YSIsImVudHJ5IiwibWFwIiwiYXV0aG9yIiwiZW4iLCJ1cGRhdGVUaW1lIiwiRGF0ZSIsInBhcnNlIiwidXBkYXRlZCIsImV2ZW50IiwiaWQiLCJzcGxpdCIsIm5hbWUiLCJ1cmkiLCJyZXBsYWNlIiwidXJsIiwiYmFzZVVybEdldHRlciIsImRhdGFGZXRjaGVyIiwieG1sVG9Kc29uQ29udmVydGVyIiwib2RtIiwiZGF0YSIsImpzb25EYXRhIiwieG1sIiwiUHJvbWlzZSIsImFsbCIsImNyZWF0ZSIsImtleSIsInJlcURhdGEiLCJzYXZlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsSUFBTUEsVUFBVSxTQUFWQSxPQUFVLE9BQVdDLE9BQVgsRUFBdUI7QUFBQSxNQUFwQkMsSUFBb0IsUUFBcEJBLElBQW9COztBQUNyQyxNQUFNQyxlQUFlRCxLQUFLRSxLQUFMLENBQVdDLEdBQVgsQ0FBZSxjQUFNO0FBQ3hDLFFBQU1DLFNBQVNDLEdBQUdELE1BQUgsQ0FBVSxDQUFWLENBQWY7QUFDQSxXQUFPO0FBQ0xFLGtCQUFZLElBQUlDLElBQUosQ0FBU0EsS0FBS0MsS0FBTCxDQUFXSCxHQUFHSSxPQUFILENBQVcsQ0FBWCxDQUFYLENBQVQsQ0FEUDtBQUVMQyxhQUFPTCxHQUFHTSxFQUFILENBQU0sQ0FBTixFQUFTQyxLQUFULENBQWUsR0FBZixFQUFvQixDQUFwQixFQUF1QkEsS0FBdkIsQ0FBNkIsR0FBN0IsRUFBa0MsQ0FBbEMsQ0FGRjtBQUdMUixjQUFRO0FBQ05TLGNBQU1ULE9BQU9TLElBQVAsQ0FBWSxDQUFaLENBREE7QUFFTkMsYUFBS1YsT0FBT1UsR0FBUCxDQUFXLENBQVgsRUFBY0MsT0FBZCxDQUFzQmhCLE9BQXRCLEVBQStCLEVBQS9CO0FBRkM7QUFISCxLQUFQO0FBUUQsR0FWb0IsQ0FBckI7QUFXQSxTQUFPRSxZQUFQO0FBQ0QsQ0FiRDs7QUFlQTs7a0JBQ2U7QUFBQSxNQUFHZSxHQUFILFNBQUdBLEdBQUg7QUFBQSxNQUFRQyxhQUFSLFNBQVFBLGFBQVI7QUFBQSxNQUF1QkMsV0FBdkIsU0FBdUJBLFdBQXZCO0FBQUEsTUFBb0NDLGtCQUFwQyxTQUFvQ0Esa0JBQXBDO0FBQUEsTUFBd0RDLEdBQXhELFNBQXdEQSxHQUF4RDtBQUFBLFNBQ2Isa0JBQVk7QUFDVixRQUFNckIsVUFBVSxNQUFNa0IsY0FBYyxFQUFFRCxRQUFGLEVBQWQsQ0FBdEI7O0FBRFUsZ0JBRU8sTUFBTUUsWUFBWSxFQUFFRixRQUFGLEVBQVosQ0FGYjtBQUFBLFFBRUZLLElBRkUsU0FFRkEsSUFGRTs7QUFHVixRQUFNQyxXQUFXLE1BQU1ILG1CQUFtQixFQUFFSSxLQUFLRixJQUFQLEVBQW5CLENBQXZCO0FBQ0EsUUFBTXBCLGVBQWVILFFBQVF3QixRQUFSLEVBQWtCdkIsT0FBbEIsQ0FBckI7O0FBRUEsV0FBT3lCLFFBQVFDLEdBQVIsQ0FBWXhCLGFBQWFFLEdBQWIsQ0FBaUI7QUFBQSxhQUNsQ2lCLElBQUlNLE1BQUosQ0FBVyxFQUFFQyxLQUFLQyxRQUFReEIsTUFBUixDQUFlVSxHQUF0QixFQUEyQk8sTUFBTU8sT0FBakMsRUFBWCxFQUF1REMsSUFBdkQsRUFEa0M7QUFBQSxLQUFqQixDQUFaLENBQVA7QUFFRCxHQVRZO0FBQUEsQyIsImZpbGUiOiJzY3JhcGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRXh0cmFjdHMgb25seSB0aGUgcmVxdWlyZWQgZGF0YVxuY29uc3QgZXh0cmFjdCA9ICh7IGZlZWQgfSwgYmFzZVVybCkgPT4ge1xuICBjb25zdCByZXF1aXJlZERhdGEgPSBmZWVkLmVudHJ5Lm1hcChlbiA9PiB7XG4gICAgY29uc3QgYXV0aG9yID0gZW4uYXV0aG9yWzBdXG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZVRpbWU6IG5ldyBEYXRlKERhdGUucGFyc2UoZW4udXBkYXRlZFswXSkpLFxuICAgICAgZXZlbnQ6IGVuLmlkWzBdLnNwbGl0KCc6JylbMl0uc3BsaXQoJy8nKVswXSxcbiAgICAgIGF1dGhvcjoge1xuICAgICAgICBuYW1lOiBhdXRob3IubmFtZVswXSxcbiAgICAgICAgdXJpOiBhdXRob3IudXJpWzBdLnJlcGxhY2UoYmFzZVVybCwgJycpXG4gICAgICB9XG4gICAgfVxuICB9KVxuICByZXR1cm4gcmVxdWlyZWREYXRhXG59XG5cbi8vIEVUTCdzIHJlcXVpcmVkIGRhdGEgZnJvbSBlbmRwb2ludCB0byBwZXJzaXN0ZW5jZVxuZXhwb3J0IGRlZmF1bHQgKHsgdXJsLCBiYXNlVXJsR2V0dGVyLCBkYXRhRmV0Y2hlciwgeG1sVG9Kc29uQ29udmVydGVyLCBvZG0gfSkgPT5cbiAgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGJhc2VVcmwgPSBhd2FpdCBiYXNlVXJsR2V0dGVyKHsgdXJsIH0pXG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBkYXRhRmV0Y2hlcih7IHVybCB9KVxuICAgIGNvbnN0IGpzb25EYXRhID0gYXdhaXQgeG1sVG9Kc29uQ29udmVydGVyKHsgeG1sOiBkYXRhIH0pXG4gICAgY29uc3QgcmVxdWlyZWREYXRhID0gZXh0cmFjdChqc29uRGF0YSwgYmFzZVVybClcblxuICAgIHJldHVybiBQcm9taXNlLmFsbChyZXF1aXJlZERhdGEubWFwKHJlcURhdGEgPT5cbiAgICAgIG9kbS5jcmVhdGUoeyBrZXk6IHJlcURhdGEuYXV0aG9yLnVyaSwgZGF0YTogcmVxRGF0YSB9KS5zYXZlKCkpKVxuICB9XG4iXX0=